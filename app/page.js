"use client";
import Image from "next/image";
import Epicycle from "@/components/epicycle";
import DrawingCanvas from "@/components/drawingCanvas";
import { useState } from "react";
import useWindowDimensions from "@/components/windowDimensions";

export default function Home() {
  // let pointsTest = [
  //   [-2, 2],
  //   [-1.5, 2],
  //   [-1, 2],
  //   [-0.5, 2],
  //   [0, 2],
  //   [0.5, 2],
  //   [1, 2],
  //   [1.5, 2],
  //   [2, 2],
  //   [2, 1.5],
  //   [2, 1],
  //   [2, 0.5],
  //   [2, 0],
  //   [2, -0.5],
  //   [2, -1],
  //   [2, -1.5],
  //   [2, -2],
  //   [1.5, -2],
  //   [1, -2],
  //   [0.5, -2],
  //   [0, -2],
  //   [-0.5, -2],
  //   [-1, -2],
  //   [-1.5, -2],
  //   [-2, -2],
  //   [-2, -1.5],
  //   [-2, -1],
  //   [-2, -0.5],
  //   [-2, 0],
  //   [-2, 0.5],
  //   [-2, 1],
  //   [-2, 1.5],
  // ];
  // let pointsTest=[
  //   [0, 0], [1.0, 0], [2, 0], [3.0, 0], [4, 0], [4, 1.0], [4, 2], [4, 3.0], [4, 4], [3.0, 4], [2, 4], [1.0, 4], [0, 4], [0, 3.0], [0, 2], [0, 1.0]
  // ]


  let pointsFourier =
    [[0, 1000], [100, 1000], [200, 900], [200, 0], [400, 0], [400, 900], [500, 1000], [600, 1000], [600, 0], [700, 0], [700, -100], [500, -100], [500, -900], [400, -1000], [300, -1000], [300, -900], [100, -900], [100, -1000], [0, -1000], [0, -900]];

  let pointsF =
    [[-584, 124], [-610, 124], [-636, 124], [-662, 124], [-689, 124], [-672, 111], [-678, 85], [-685, 59], [-691, 33], [-698, 7], [-720, -3], [-696, -3], [-673, -3], [-650, -4], [-650, 4], [-673, 6], [-667, 29], [-661, 53], [-643, 55], [-632, 34], [-625, 58], [-618, 83], [-638, 74], [-658, 65], [-652, 89], [-646, 114], [-625, 113], [-605, 113], [-597, 96], [-590, 79]]


  // let pointstest = [[[166, -83], [140, -79], [121, -88], [113, -104], [115, -119], [132, -126], [150, -134], [155, -144], [142, -159], [120, -160], [111, -155], [120, -145], [118, -136], [106, -134], [97, -145], [104, -162], [132, -168], [147, -161], [162, -154], [169, -139], [166, -123], [148, -115], [131, -108], [127, -100], [134, -89], [152, -86], [160, -91], [155, -107], [165, -109], [173, -100]]
  // ,[[-83, -105], [-74, -111], [-57, -90], [-62, -112], [-67, -134], [-73, -157], [-65, -168], [-55, -146], [-46, -124], [-37, -102], [-16, -86], [-3, -92], [-6, -117], [-9, -142], [-13, -167], [2, -162], [9, -133], [17, -105], [37, -87], [53, -93], [49, -115], [45, -138], [42, -161], [67, -166], [77, -153], [87, -141], [77, -136], [67, -147], [57, -159], [64, -133], [72, -108], [65, -94], [58, -80], [37, -86], [16, -93], [-2, -79], [-19, -85], [-37, -91], [-62, -79]]
  // ,[[-94, -83], [-117, -79], [-135, -89], [-158, -79], [-172, -89], [-179, -110], [-171, -112], [-162, -90], [-153, -88], [-157, -114], [-161, -140], [-166, -166], [-155, -167], [-149, -161], [-142, -138], [-135, -116], [-128, -94], [-105, -87], [-110, -105], [-96, -110], [-87, -99]]
  // ,[[-202, -87], [-220, -79], [-238, -79], [-265, -91], [-274, -106], [-284, -121], [-286, -136], [-281, -154], [-269, -164], [-252, -168], [-234, -166], [-214, -156], [-201, -141], [-193, -119], [-194, -100]]
  // ,[[-223, -87], [-214, -97], [-214, -110], [-221, -137], [-229, -151], [-237, -158], [-246, -161], [-255, -160], [-262, -155], [-265, -140], [-259, -121], [-254, -102], [-240, -88]]
  // ,[[-391, -82], [-415, -79], [-436, -90], [-440, -119], [-422, -127], [-404, -135], [-401, -146], [-411, -158], [-436, -160], [-444, -155], [-436, -138], [-449, -134], [-458, -144], [-450, -163], [-423, -168], [-408, -161], [-394, -155], [-391, -140], [-388, -125], [-405, -117], [-423, -109], [-428, -98], [-420, -88], [-396, -90], [-401, -106], [-391, -109], [-382, -99]]
  // ,[[-574, -86], [-581, -112], [-569, -100], [-557, -89], [-561, -114], [-565, -140], [-570, -166], [-554, -163], [-548, -143], [-542, -123], [-537, -103], [-515, -86], [-502, -95], [-506, -116], [-510, -137], [-515, -159], [-496, -168], [-474, -153], [-468, -136], [-477, -135], [-485, -153], [-499, -158], [-491, -131], [-483, -105], [-490, -84], [-515, -79], [-538, -92], [-556, -79]]
  // ,[[-662, -85], [-674, -100], [-687, -116], [-690, -145], [-686, -155], [-662, -168], [-635, -158], [-622, -167], [-606, -165], [-592, -141], [-593, -135], [-600, -135], [-609, -157], [-618, -157], [-613, -133], [-608, -110], [-604, -87], [-618, -83], [-633, -79]]
  // ,[[-635, -86], [-628, -91], [-625, -99], [-631, -122], [-637, -146], [-647, -157], [-653, -160], [-663, -160], [-669, -154], [-670, -143], [-666, -126], [-662, -110], [-651, -91], [-642, -86]]
  // ,[[-692, -85], [-717, -79], [-736, -89], [-759, -79], [-771, -87], [-777, -112], [-769, -110], [-760, -87], [-753, -90], [-758, -112], [-763, -134], [-769, -157], [-766, -166], [-750, -162], [-743, -140], [-737, -118], [-731, -97], [-721, -88], [-706, -87], [-710, -106], [-697, -110], [-688, -100]]
  // ,[[-879, -38], [-885, -60], [-892, -83], [-878, -66], [-865, -50], [-837, -50], [-843, -75], [-850, -101], [-856, -127], [-863, -153], [-878, -158], [-894, -164], [-866, -164], [-839, -164], [-812, -165], [-812, -157], [-837, -152], [-830, -126], [-824, -100], [-817, -74], [-811, -48], [-784, -49], [-782, -65], [-780, -81], [-772, -83], [-768, -61], [-764, -39]]
  // ,[[-288, -34], [-303, -35], [-319, -37], [-327, -58], [-335, -80], [-359, -84], [-337, -93], [-342, -117], [-347, -142], [-352, -166], [-357, -191], [-369, -197], [-362, -183], [-376, -175], [-385, -184], [-379, -201], [-359, -204], [-340, -189], [-334, -164], [-328, -140], [-322, -115], [-317, -91], [-289, -86], [-315, -80], [-311, -62], [-308, -44], [-297, -39], [-302, -57], [-287, -60], [-280, -43]]
  // ,[[-18, 78], [-41, 82], [-60, 72], [-82, 82], [-96, 72], [-101, 49], [-92, 52], [-82, 75], [-77, 72], [-81, 46], [-85, 20], [-90, -5], [-79, -6], [-73, 0], [-66, 22], [-59, 44], [-52, 67], [-29, 74], [-34, 56], [-20, 51], [-11, 63]]
  // ,[[-127, 79], [-142, 80], [-157, 81], [-172, 71], [-187, 61], [-198, 34], [-197, 16], [-189, 2], [-174, -2], [-159, -7], [-133, -2], [-118, 9], [-119, 16], [-125, 17], [-145, 3], [-164, 0], [-177, 11], [-174, 37], [-158, 38], [-142, 39], [-122, 50], [-118, 69]]
  // ,[[-131, 69], [-131, 58], [-138, 50], [-147, 46], [-158, 44], [-172, 45], [-167, 59], [-163, 65], [-156, 71], [-148, 75], [-139, 75]]
  // ,[[-247, 82], [-263, 71], [-271, 50], [-262, 50], [-254, 68], [-246, 75], [-241, 73], [-247, 53], [-254, 33], [-261, 14], [-258, 0], [-241, -7], [-222, 3], [-213, 25], [-221, 26], [-230, 7], [-242, 1], [-235, 24], [-229, 47], [-223, 70], [-230, 79]]
  // ,[[-282, 78], [-304, 82], [-323, 72], [-346, 82], [-359, 73], [-364, 49], [-357, 50], [-350, 71], [-341, 73], [-346, 50], [-351, 27], [-356, 5], [-352, -6], [-343, -6], [-336, 2], [-329, 23], [-322, 45], [-316, 67], [-293, 74], [-298, 57], [-284, 51], [-275, 62]]
  // ,[[-477, 70], [-484, 56], [-477, 49], [-466, 70], [-454, 73], [-461, 46], [-469, 20], [-460, -2], [-440, -7], [-418, 2], [-398, -7], [-382, 4], [-375, 23], [-384, 26], [-401, 2], [-397, 27], [-393, 52], [-389, 78], [-404, 76], [-409, 55], [-414, 35], [-420, 15], [-434, 1], [-450, 12], [-445, 32], [-441, 52], [-437, 72], [-460, 82]]
  // ,[[-509, 75], [-521, 81], [-544, 82], [-568, 72], [-579, 61], [-590, 39], [-591, 18], [-586, 6], [-570, -5], [-553, -7], [-531, -2], [-516, 8], [-503, 27], [-498, 48], [-500, 62]]
  // ,[[-531, 75], [-522, 69], [-519, 62], [-522, 43], [-526, 25], [-541, 4], [-551, 0], [-561, 1], [-570, 11], [-570, 25], [-566, 39], [-562, 54], [-550, 70], [-540, 75]]
  // ,[[-584, 124], [-610, 124], [-636, 124], [-662, 124], [-689, 124], [-672, 111], [-678, 85], [-685, 59], [-691, 33], [-698, 7], [-720, -3], [-696, -3], [-673, -3], [-650, -4], [-650, 4], [-673, 6], [-667, 29], [-661, 53], [-643, 55], [-632, 34], [-625, 58], [-618, 83], [-638, 74], [-658, 65], [-652, 89], [-646, 114], [-625, 113], [-605, 113], [-597, 96], [-590, 79]]
  // ,[[-222, 127], [-229, 127], [-233, 125], [-236, 122], [-238, 118], [-238, 110], [-234, 106], [-231, 106], [-230, 105], [-224, 106], [-217, 112], [-216, 115], [-216, 121], [-217, 123]]
  // ]

let pointstest=[[[566, -83], [540, -79], [521, -88], [513, -104], [515, -119], [550, -134], [555, -144], [542, -159], [520, -160], [511, -155], [520, -145], [518, -136], [506, -134], [497, -145], [504, -162], [532, -168], [562, -154], [569, -139], [566, -123], [531, -108], [527, -100], [534, -89], [552, -86], [560, -91], [555, -107], [565, -109], [573, -100]], [[317, -105], [326, -111], [343, -90], [327, -157], [335, -168], [363, -102], [384, -86], [397, -92], [387, -167], [402, -162], [417, -105], [437, -87], [453, -93], [442, -161], [467, -166], [487, -141], [477, -136], [457, -159], [472, -108], [458, -80], [416, -93], [398, -79], [363, -91], [338, -79]], [[306, -83], [283, -79], [265, -89], [242, -79], [228, -89], [221, -110], [229, -112], [238, -90], [247, -88], [234, -166], [245, -167], [251, -161], [272, -94], [295, -87], [290, -105], [304, -110], [313, -99]], [[198, -87], [180, -79], [162, -79], [135, -91], [116, -121], [114, -136], [119, -154], [131, -164], [148, -168], [166, -166], [186, -156], [199, -141], [207, -119], [206, -100]], [[177, -87], [186, -97], [186, -110], [179, -137], [171, -151], [163, -158], [154, -161], [145, -160], [138, -155], [135, -140], [146, -102], [160, -88]], [[9, -82], [-15, -79], [-36, -90], [-40, -119], [-4, -135], [-1, -146], [-11, -158], [-36, -160], [-44, -155], [-36, -138], [-49, -134], [-58, -144], [-50, -163], [-23, -168], [6, -155], [12, -125], [-23, -109], [-28, -98], [-20, -88], [4, -90], [-1, -106], [9, -109], [18, -99]], [[-174, -86], [-181, -112], [-157, -89], [-170, -166], [-154, -163], [-137, -103], [-115, -86], [-102, -95], [-115, -159], [-96, -168], [-74, -153], [-68, -136], [-77, -135], [-85, -153], [-99, -158], [-83, -105], [-90, -84], [-115, -79], [-138, -92], [-156, -79]], [[-262, -85], [-287, -116], [-290, -145], [-286, -155], [-262, -168], [-235, -158], [-222, -167], [-206, -165], [-192, -141], [-193, -135], [-200, -135], [-209, -157], [-218, -157], [-204, -87], [-233, -79]], [[-235, -86], [-228, -91], [-225, -99], [-237, -146], [-247, -157], [-253, -160], [-263, -160], [-269, -154], [-270, -143], [-262, -110], [-251, -91], [-242, -86]], [[-292, -85], [-317, -79], [-336, -89], [-359, -79], [-371, -87], [-377, -112], [-369, -110], [-360, -87], [-353, -90], [-369, -157], [-366, -166], [-350, -162], [-331, -97], [-321, -88], [-306, -87], [-310, -106], [-297, -110], [-288, -100]], [[-479, -38], [-492, -83], [-465, -50], [-437, -50], [-463, -153], [-494, -164], [-412, -165], [-412, -157], [-437, -152], [-411, -48], [-384, -49], [-380, -81], [-372, -83], [-364, -39]], [[112, -34], [81, -37], [65, -80], [41, -84], [63, -93], [43, -191], [31, -197], [38, -183], [24, -175], [15, -184], [21, -201], [41, -204], [60, -189], [83, -91], [111, -86], [85, -80], [92, -44], [103, -39], [98, -57], [113, -60], [120, -43]], [[382, 78], [359, 82], [340, 72], [318, 82], [304, 72], [299, 49], [308, 52], [318, 75], [323, 72], [310, -5], [321, -6], [327, 0], [348, 67], [371, 74], [366, 56], [380, 51], [389, 63]], [[273, 79], [243, 81], [213, 61], [202, 34], [203, 16], [211, 2], [241, -7], [267, -2], [282, 9], [281, 16], [275, 17], [255, 3], [236, 0], [223, 11], [226, 37], [258, 39], [278, 50], [282, 69]], [[269, 69], [269, 58], [262, 50], [253, 46], [242, 44], [228, 45], [233, 59], [237, 65], [244, 71], [252, 75], [261, 75]], [[153, 82], [137, 71], [129, 50], [138, 50], [146, 68], [154, 75], [159, 73], [139, 14], [142, 0], [159, -7], [178, 3], [187, 25], [179, 26], [170, 7], [158, 1], [177, 70], [170, 79]], [[118, 78], [96, 82], [77, 72], [54, 82], [41, 73], [36, 49], [43, 50], [50, 71], [59, 73], [44, 5], [48, -6], [57, -6], [64, 2], [84, 67], [107, 74], [102, 57], [116, 51], [125, 62]], [[-77, 70], [-84, 56], [-77, 49], [-66, 70], [-54, 73], [-69, 20], [-60, -2], [-40, -7], [-18, 2], [2, -7], [18, 4], [25, 23], [16, 26], [-1, 2], [11, 78], [-4, 76], [-20, 15], [-34, 1], [-50, 12], [-37, 72], [-60, 82]], [[-109, 75], [-121, 81], [-144, 82], [-168, 72], [-179, 61], [-190, 39], [-191, 18], [-186, 6], [-170, -5], [-153, -7], [-131, -2], [-116, 8], [-103, 27], [-98, 48], [-100, 62]], [[-131, 75], [-122, 69], [-119, 62], [-126, 25], [-141, 4], [-151, 0], [-161, 1], [-170, 11], [-170, 25], [-162, 54], [-150, 70], [-140, 75]], [[-184, 124], [-289, 124], [-272, 111], [-298, 7], [-320, -3], [-250, -4], [-250, 4], [-273, 6], [-261, 53], [-243, 55], [-232, 34], [-218, 83], [-258, 65], [-246, 114], [-205, 113], [-190, 79]], [[178, 127], [171, 127], [167, 125], [164, 122], [162, 118], [162, 110], [166, 106], [169, 106], [170, 105], [176, 106], [183, 112], [184, 115], [184, 121], [183, 123]]]


  const [points, setPoints] = useState([]);

  function arrayEquals(a, b) {
    return (
      Array.isArray(a) &&
      Array.isArray(b) &&
      a.length === b.length &&
      a.every((val, index) => val === b[index])
    );
  }

  const handlePointsUpdate = (updatedPoints) => {
    // do we need
    if (arrayEquals(updatedPoints, [])) {
    }
    setPoints(updatedPoints);
  };

  
  const { width, height } = useWindowDimensions();

  console.log(width);
  console.log(height);
  const [showMainApp, setShowMainApp] = useState(0);

  if (showMainApp === 0) {
    return (
      <div className="flex flex-col items-center justify-center h-screen bg-gray-100">
        <h1 className="text-5xl font-mono font-bold text-black absolute top-0 left-1/2 transform -translate-x-1/2 mt-4">
          Fourier Series
        </h1>
        <button
          onClick={() => setShowMainApp(1)}
          className="mb-4 px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-700"
        >
          Sandbox
        </button>
        <button
          onClick={() => setShowMainApp(3)}
          className="px-4 py-2 text-white bg-green-500 rounded hover:bg-green-700"
        >
          Demo
        </button>
      </div>
    );
  }
  else if (showMainApp === 1) {
    return (
      <div>
        <div className="h-screen w-full flex flex-col  items-center text-5xl font-operatorItalic bg-[#0F1A19] bg-[length:30px_30px]
         bg-[linear-gradient(to_right,#293b39_1px,transparent_1px),linear-gradient(to_bottom,#293b39_1px,transparent_1px)]">
          <Epicycle
            points={points}
            speed={0.01}
            width={width}
            height={height}
            colour={"rainbow"}
            glow={true}
            className="absolute left-0 top-0"
          />
          <div className="relative">
            <DrawingCanvas
              onPointsUpdate={handlePointsUpdate}
              width={width}
              height={height}
              className="absolute left-0 top-0 z-50"
            />
          </div>
          <h1 className="text-5xl font-mono font-bold text-white absolute">Fourier Series</h1>

          <button
            onClick={() => setShowMainApp(0)}
            className="fixed bottom-4 right-4 px-4 py-2 text-white bg-red-500 rounded hover:bg-red-700"
          ></button>
        </div>
      </div>
    );
  }
  else {
    return (
      <div>
        <div className="h-screen w-full flex flex-col  items-center text-5xl font-operatorItalic bg-[#0F1A19]">
          <Epicycle
            points={pointstest[0]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[1]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[2]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[3]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[4]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[5]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[6]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[7]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[8]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[9]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[10]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[11]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[12]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[13]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[14]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[15]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[16]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[17]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[18]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[19]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[20]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />
          <Epicycle
            points={pointstest[21]}
            speed={0.1}
            width={width}
            height={height}
            className="absolute left-0 top-0"
          />

        </div>
        <button
          onClick={() => setShowMainApp(0)}
          className="fixed bottom-4 right-4 px-4 py-2 text-white bg-red-500 rounded hover:bg-red-700"
        ></button>
      </div>
    );
  }


}
